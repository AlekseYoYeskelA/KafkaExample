server:
  port: 8085

spring:
  application:
    name: orchestrator
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: orchestrator-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.example.core.dto,com.example.core.dto.*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  datasource:
    url: jdbc:postgresql://localhost:5432/user_orchestrator_db?currentSchema=orchestrator_schema
    username: dbuser
    password: password
    driver-class-name: org.postgresql.Driver

  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
    default-schema: orchestrator_schema

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true


  # Кастомные имена топиков
kafka:
  topics:
    user-create-command: user.create.command
    user-create-with-update-command: user.create_with_update.command
    user-update-command: user.update.command
    user-compensate-command: user.compensate.command
    user-created-event: user.created.event
    user-update-response: user.update.response

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.http.converter.json: DEBUG
    org.apache.kafka.clients: WARN
    org.apache.kafka.common.metrics: ERROR