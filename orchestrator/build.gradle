plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
//    id "org.openapi.generator" version "7.0.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // Аннотации для описания API
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    implementation 'com.example:core:0.0.1-SNAPSHOT'
}

//openApiGenerate {
//    generatorName = "spring" // Тип генератора
//    inputSpec = "$projectDir/src/main/resources/specifications/openapi.yml".toString() // Путь к спецификации
//    outputDir = layout.buildDirectory.dir("generated").get().asFile.absolutePath // Выходная директория
//    apiPackage = "com.example.orchestrator.api" // Пакет для API интерфейсов
//    modelPackage = "com.example.orchestrator.model" // Пакет для DTO моделей
//    configOptions = [
//            interfaceOnly: "true", // Генерировать только интерфейсы
//            useSpringBoot3: "true", // Использовать Spring Boot 3
//            java8: "true", // Генерировать код под Java 8+
//            dateLibrary: "java8", // Использовать java.time
//            useTags: "true", // Использовать теги для группировки
//            openApiNullable: "false", // Не использовать специальные nullable-аннотации
//            unhandledException: "true" // Обрабатывать не перехваченные исключения
//    ]
//    globalProperties = [
//            modelDocs: "false" // Не генерировать Javadoc для моделей
//    ]
//}
//
//// Добавляем сгенерированный код в исходники
//sourceSets {
//    main {
//        java {
//            srcDirs = ['src/main/java', layout.buildDirectory.dir("generated/src/main/java")]
//        }
//    }
//}
//
//tasks.compileJava {
//    dependsOn tasks.openApiGenerate
//}
//
//clean {
//    delete layout.buildDirectory.dir("generated")
//}

tasks.named('test') {
    useJUnitPlatform()
}
